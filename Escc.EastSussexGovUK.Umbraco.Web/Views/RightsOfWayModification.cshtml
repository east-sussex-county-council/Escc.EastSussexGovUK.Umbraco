@using ClientDependency.Core.Mvc
@using Escc.ClientDependencyFramework
@using Escc.EastSussexGovUK
@using Escc.EastSussexGovUK.Features
@using Escc.EastSussexGovUK.Mvc
@using Escc.Dates
@using Escc.Web
@inherits Umbraco.Web.Mvc.UmbracoViewPage<Escc.EastSussexGovUK.Umbraco.Web.RightsOfWayModifications.RightsOfWayModificationViewModel>
@{
    Model.EsccWebsiteView = new MvcViewSelector().CurrentViewIs(Layout);
    Model.Metadata.IsInSearch = false;

    Html.Partial("~/Views/EastSussexGovUK/_FeatureDependencies.cshtml", new List<IClientDependencySet>()
    {
        new WebChat() { WebChatSettings = Model.WebChat }
    });

    Html.RequiresCss("~/css/rights-of-way-small.css");
    Html.RequiresJs(JsFileAlias.Resolve("GoogleMaps"), 90);
    Html.RequiresJs("~/js/rights-of-way-map.js");
    var nonce = Guid.NewGuid().ToString().Replace("-", String.Empty);
    new ContentSecurityPolicyHeaders(Response.Headers)
        .AppendPolicy(new ContentSecurityPolicyFromConfig().Policies["GoogleMaps"])
        .AppendPolicy($"script-src 'nonce-{nonce}'")
        .UpdateHeaders();
}

<div class="article">
    <article>
        <div class="content text-content">

            <h1>@Model.Metadata.Title</h1>

            @Html.Partial("~/Views/EastSussexGovUK/Features/_Latest.cshtml")

            <table class="rights-of-way-application modification-order">
                <tbody>
                    <tr><th scope="row">Reference</th><td>@Model.Reference</td></tr>
                    @if (Model.IndividualOwners.Any() || Model.OrganisationalOwners.Any())
                    {
                        if (Model.IndividualOwners.Count() + Model.OrganisationalOwners.Count() == 1)
                        {
                            <tr><th scope="row">Owner</th><td>@Model.IndividualOwners.FirstOrDefault()@Model.OrganisationalOwners.FirstOrDefault()</td></tr>
                        }
                        else
                        { 
                        <tr><th scope="row">Owners</th><td><ul class="owners">
                            @foreach (var owner in Model.IndividualOwners) { <li>@owner</li> }
                            @foreach (var owner in Model.OrganisationalOwners) { <li>@owner</li> }
                        </ul></td></tr>
                        }
                    }
                    @if (Model.Addresses.Any())
                    {
                        if (Model.Addresses.Count() == 1)
                        {
                            <tr><th scope="row">Address of property affected</th><td>@Model.Addresses.First().BS7666Address</td></tr>
                        }
                        else
                        {
                            <tr><th scope="row">Addresses of properties affected</th>
                            <td><ul class="addresses">
                            @foreach (var address in Model.Addresses) {  <li>@address.BS7666Address</li> }
                            </ul></td></tr>
                        }
                    }
                    @if (!String.IsNullOrEmpty(Model.NearestTownOrVillage))
                    {
                        <tr><th scope="row">Nearest town or village</th><td>@Model.NearestTownOrVillage</td></tr>
                    }
                    @if (Model.Parishes.Any())
                    {
                        if (Model.Parishes.Count() == 1)
                        {
                            <tr><th scope="row">Parish</th><td>@Model.Parishes.First()</td></tr>
                        }
                        else
                        { 
                            <tr><th scope="row">Parishes</th><td><ul class="parishes">
                            @foreach (var parish in Model.Parishes) { <li>@parish</li> }
                            </ul></td></tr>
                        }
                    }
                    @if (!String.IsNullOrEmpty(Model.DescriptionOfRoute))
                    {
                    <tr><th scope="row">Description of route</th><td>@Model.DescriptionOfRoute</td></tr>
                    }
                    @if (!String.IsNullOrEmpty(Model.StatusClaimed))
                    {
                    <tr><th scope="row">Status claimed</th><td>@Model.StatusClaimed</td></tr>
                    }
                    @if (!String.IsNullOrEmpty(Model.OrdnanceSurveyGridReference))
                    {
                    <tr><th scope="row">Ordnance Survey grid reference(s)</th><td>@Model.OrdnanceSurveyGridReference</td></tr>
                    }
                    <tr><th scope="row">Date received</th><td>@Model.DateReceived.ToBritishDateWithDay()</td></tr>
                    @if (Model.IndividualApplicant != null)
                    {
                        <tr><th scope="row">Applicant</th><td>@Model.IndividualApplicant</td></tr>
                    }
                    @if (!String.IsNullOrEmpty(Model.OrganisationalApplicant))
                    {
                        <tr><th scope="row">Applicant</th><td>@Model.OrganisationalApplicant</td></tr>
                    }
                    @if (Model.CouncilOfficerAssigned != null)
                    {
                        <tr><th scope="row">Council officer assigned</th><td>@Model.CouncilOfficerAssigned</td></tr>
                    }
                    @if (!String.IsNullOrEmpty(Model.ApplicationStatus))
                    {
                        <tr><th scope="row">Status of application</th><td>@Model.ApplicationStatus</td></tr>
                    }
                    @if (!String.IsNullOrEmpty(Model.Decision))
                    {
                        <tr><th scope="row">Decision</th><td>@Model.Decision</td></tr>
                    }
                    @if (Model.DateDetermined.HasValue)
                    {
                    <tr><th scope="row">Date decision determined</th><td>@Model.DateDetermined.ToBritishDateWithDay()</td></tr>
                    }
                    @if (Model.DateModificationOrderConfirmed.HasValue)
                    {
                    <tr><th scope="row">Date definitive map modification order confirmed</th><td>@Model.DateModificationOrderConfirmed.ToBritishDateWithDay()</td></tr>
                    }
                </tbody>
            </table>

            @if (Model.ApplicationDocuments.Any())
            {
                <h2>Application documents</h2>
                <ul>
                    @foreach (var document in Model.ApplicationDocuments)
                    {
                    <li class="download"><a href="@document.Url">@document.Text</a></li>
                    }
                </ul>
            }

            <div id="map"></div>
        </div>
    </article>
</div>

@Html.Partial("~/Views/Layouts/_SocialMedia.cshtml")
@Html.Partial("~/Views/EastSussexGovUK/Features/_SupportingContentDesktop.cshtml")
<div class="text-content content">
    @Html.Partial("~/Views/EastSussexGovUK/Features/_Share.cshtml")
</div>

@section JavaScript {
<script nonce="@nonce">
    var locations = [];
    @foreach (var address in Model.Addresses) {
    @:  locations.push({
    @:"address": "@address.BS7666Address.ToString()",
    @:"geo": {
    @:"latitude": "@(address.GeoCoordinate?.Latitude)",
    @:"longitude": "@(address.GeoCoordinate?.Longitude)"
    @:}
    @:});
    }
</script>
}
@using Escc.EastSussexGovUK
@using Escc.EastSussexGovUK.Features
@using Escc.EastSussexGovUK.Mvc
@using Escc.EastSussexGovUK.Umbraco.Web.RightsOfWayModifications
@using Escc.Dates
@using ClientDependency.Core.Mvc
@using Escc.ClientDependencyFramework
@inherits Umbraco.Web.Mvc.UmbracoViewPage<RightsOfWayModificationsViewModel>
@{
    Model.EsccWebsiteView = new MvcViewSelector().CurrentViewIs(Layout);
    Model.Metadata.PageUrl = new Uri(Request.Url.Scheme + "://" + Request.Url.Authority + Request.Url.AbsolutePath);
    Html.Partial("~/Views/EastSussexGovUK/_FeatureDependencies.cshtml", new List<IClientDependencySet>()
    {
        new WebChat() { WebChatSettings = Model.WebChat }
    });

    Html.RequiresCss(CssFileAlias.Resolve("FormsSmall"));
    Html.RequiresCss(CssFileAlias.Resolve("FormsMedium"), MediaQueryAlias.Resolve("Medium"));
    Html.RequiresCss(CssFileAlias.Resolve("FormsLarge"), MediaQueryAlias.Resolve("Large"));
    Html.RequiresCss("~/css/rights-of-way-small.css");
    Html.RequiresCss("~/css/rights-of-way-medium.css", MediaQueryAlias.Resolve("Medium"));
}

<div class="article">
    <article>
        <div class="content text-content">

            <h1>@Model.Metadata.Title</h1>

            @Html.Partial("~/Views/EastSussexGovUK/Features/_Latest.cshtml")
            
            @Model.LeadingText
            
            <form action="@Request.Url" method="GET" class="form simple-form">
                <div class="fields-with-checkbox">
                    <div class="fields">
                        <input type="hidden" name="sort" value="@Request.QueryString["sort"]" />
                        <label for="search-modification-orders">Search: </label>
                        <input type="search" name="q" value="@Request.QueryString["q"]" id="search-modification-orders" />
                        <span class="checkbox">
                            <input id="completed" name="completed" value="1" type="checkbox" @(Request.QueryString["completed"] == "1" ? " checked=\"checked\"" : string.Empty)><label for="completed">Include completed applications</label>
                        </span>
                    </div>
                    <input type="submit" value="Search" />
                </div>
            </form>
            @{
                var queryWithoutSort = HttpUtility.ParseQueryString(Request.Url.Query);
                queryWithoutSort.Remove("sort");
                var urlWithoutSort = Request.Url.AbsolutePath + "?" + queryWithoutSort;
                if (queryWithoutSort.Count > 0) { urlWithoutSort += "&"; }
                urlWithoutSort += "sort=";

                Html.RenderPartial("~/Views/_PagingBarControl.ascx", Model.Paging);
            }

            @if (Model.ModificationOrderApplications.Any())
            {
            <table class="rights-of-way-applications modification-orders">
                <thead>
                    <tr>
                        <th scope="col"><a href="@urlWithoutSort@(Model.SortOrder == RightsOfWayModificationsSortOrder.ReferenceAscending ? "referencedescending" : "referenceascending")">Reference</a></th>
                        <th scope="col"><a href="@urlWithoutSort@(Model.SortOrder == RightsOfWayModificationsSortOrder.ParishAscending ? "parishdescending" : "parishascending")">Parishes</a></th>
                        <th scope="col"><a href="@urlWithoutSort@(Model.SortOrder == RightsOfWayModificationsSortOrder.DateReceivedAscending ? "datereceiveddescending" : "datereceivedascending")">Date received</a></th>
                        <th scope="col"><a href="@urlWithoutSort@(Model.SortOrder == RightsOfWayModificationsSortOrder.StatusAscending ? "statusdescending" : "statusascending")">Status</a></th>
                    </tr>
                </thead>
                @foreach (var modificationOrder in Model.ModificationOrderApplications)
                {
                    <tr>
                        <td><a href="@modificationOrder.PageUrl">@modificationOrder.Reference</a></td>
                        <td><ul class="parishes">
                        @foreach (var parish in modificationOrder.Parishes)
                        {
                            <li>@parish<span> Parish</span></li> 
                        }
                        </ul></td>
                        <td><span>Received </span>@modificationOrder.DateReceived.ToShortBritishDate()</td>
                        <td>@modificationOrder.ApplicationStatus</td>
                    </tr>
                }
            </table>
            }
            else
            {
                <p><strong>No applications for rights of way definitive map modification orders matched your search</strong>.</p>
            }
            @{ Html.RenderPartial("~/Views/_PagingBarControl.ascx", Model.Paging); }
            @if (Model.RssUrl != null)
            {
                var url = String.IsNullOrEmpty(Request.QueryString["q"]) ? Model.RssUrl.ToString() : Model.RssUrl + "?q=" + Request.QueryString["q"];
                var matching = String.IsNullOrEmpty(Request.QueryString["q"]) ? " ": $" matching '{Request.QueryString["q"]}' ";
            <p><a href="@url" type="application/rss+xml" rel="alternate" class="rss">Subscribe to new applications for definitive map modification orders@(matching)by RSS</a></p>
            }
            @if (Model.CsvUrl != null)
            {
                <p><a href="@Model.CsvUrl" type="text/csv" rel="alternate" class="xls">Download all applications for definitive map modification orders as CSV</a></p>
            }
        </div>
    </article>
</div>

@Html.Partial("~/Views/Layouts/_SocialMedia.cshtml")
@Html.Partial("~/Views/EastSussexGovUK/Features/_SupportingContentDesktop.cshtml")
<div class="text-content content">
    @Html.Partial("~/Views/EastSussexGovUK/Features/_Share.cshtml")
</div>
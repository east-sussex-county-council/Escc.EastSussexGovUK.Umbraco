@using ClientDependency.Core.Mvc
@using Escc.ClientDependencyFramework
@using Escc.EastSussexGovUK.Skins
@using Escc.EastSussexGovUK.Umbraco.Jobs
@using Escc.EastSussexGovUK.Umbraco.Web.Jobs.Alerts
@using Escc.EastSussexGovUK.Views
@inherits Umbraco.Web.Mvc.UmbracoViewPage<Escc.EastSussexGovUK.Umbraco.Web.Jobs.JobSearchResultsViewModel>
@{
    Model.EsccWebsiteView = ViewSelector.CurrentViewIs(Layout, ViewEngine.Mvc);
    Model.EsccWebsiteSkin = new CustomerFocusSkin();
    Html.RequiresCss(CssFileAlias.Resolve("FormsSmall"));
    Html.RequiresCss(CssFileAlias.Resolve("FormsMedium"), MediaQueryAlias.Resolve("Medium"));
    Html.RequiresCss(CssFileAlias.Resolve("FormsLarge"), MediaQueryAlias.Resolve("Large"));
    Html.RequiresCss("~/css/jobs/jobs-small.css");
    Html.RequiresCss("~/css/jobs/jobs-medium.css", MediaQueryAlias.Resolve("Medium"));
    Html.RequiresCss("~/css/jobs/jobs-large.css", MediaQueryAlias.Resolve("Large"));
    Html.RequiresCss(Request.Url.AbsolutePath + "?alttemplate=JobsCss&media-query=small", 101);
    Html.RequiresCss(Request.Url.AbsolutePath + "?alttemplate=JobsCss&media-query=medium", 101, MediaQueryAlias.Resolve("Medium"));
    Html.RequiresCss(Request.Url.AbsolutePath + "?alttemplate=JobsCss&media-query=large", 101, MediaQueryAlias.Resolve("Large"));
    Html.RequiresJs("~/js/job-results.js");
    Html.RequiresJs(JsFileAlias.Resolve("Tips"));
    Html.RequiresJs(JsFileAlias.Resolve("DescribedByTips"));

    var query = HttpUtility.ParseQueryString(Request.Url.Query);
    JobSearchQuery.JobsSortOrder sort = JobSearchQuery.JobsSortOrder.None;
    Enum.TryParse(query["sort"], true, out sort);

    var queryWithoutSort = HttpUtility.ParseQueryString(Request.Url.Query);
    queryWithoutSort.Remove("sort");
    var urlWithoutSort = Request.Url.AbsolutePath + "?" + queryWithoutSort;
    Model.Metadata.PageUrl = new Uri(Request.Url, urlWithoutSort);
    if (queryWithoutSort.Count > 0) { urlWithoutSort += "&";}
    urlWithoutSort += "sort=";

    var queryWithoutPage = HttpUtility.ParseQueryString(Request.Url.Query);
    queryWithoutPage.Remove("page");
    var urlWithoutPage = Request.Url.AbsolutePath + "?" + queryWithoutPage;
    if (queryWithoutPage.Count > 0) { urlWithoutPage += "&"; }
    urlWithoutPage += "page=";
}
@section Breadcrumb {}
@Html.Partial("~/Views/JobsHeader.cshtml", Model)

<div class="jobs-content full-page">
    <div class="content text-content">
        <h1>@Model.Metadata.Title</h1>

        @if (Request.QueryString["subscribed"] == "1")
        {
            <div class="success">
                <p>Your alert has been saved. Please check your inbox for a confirmation email.</p>
            </div>
        }

        @Html.Partial("~/Views/EastSussexGovUK/Features/_Latest.cshtml")

        @if (Model.Jobs.Count > 0)
        {
            Html.RenderPartial("~/Views/_PagingBarControl.ascx", Model.Paging);
            <table class="job-results">
                <thead>
                <tr>
                    <th class="job-title"><a href="@urlWithoutSort@(sort == JobSearchQuery.JobsSortOrder.JobTitleAscending ? "jobtitledescending" : "jobtitleascending")">Job title</a></th>
                    <th class="location"><a href="@urlWithoutSort@(sort == JobSearchQuery.JobsSortOrder.LocationAscending ? "locationdescending" : "locationascending")">Location</a></th>
                    <th class="salary"><a href="@urlWithoutSort@(sort == JobSearchQuery.JobsSortOrder.SalaryRangeAscending ? "salaryrangedescending" : "salaryrangeascending")">Salary range</a></th>
                    <th class="work-pattern"><a href="@urlWithoutSort@(sort == JobSearchQuery.JobsSortOrder.WorkPatternAscending ? "workpatterndescending" : "workpatternascending")">Work pattern</a></th>
                    <th class="closing-date"><a href="@urlWithoutSort@(sort == JobSearchQuery.JobsSortOrder.ClosingDateAscending ? "closingdatedescending" : "closingdateascending")">Closing date</a></th>
                </tr>
                </thead>
                @Html.Partial("~/Views/JobsTableBody.cshtml", Model.Jobs)
            </table>
            Html.RenderPartial("~/Views/_PagingBarControl.ascx", Model.Paging);
            if ((String.IsNullOrEmpty(Request.QueryString["page"]) || Request.QueryString["page"].ToUpperInvariant() != "ALL") && Model.Paging.TotalPages > 1)
            {
                <p><a href="@(urlWithoutPage)all">View all results</a></p>
            }
        }
        else
        {
            <p>Sorry, there are no jobs at the moment matching your search.</p>
        }


        @if (Request.QueryString["subscribed"] != "1")
        {
            <h2>Alert me about jobs like these</h2>
            using (Html.BeginUmbracoForm<JobAlertsSurfaceController>("CreateAlert", null, new Dictionary<string, object> { { "class", "job-alerts form simple-form" } }))
            {
                @Html.AntiForgeryToken();

                <input type="hidden" name="JobsSet" value="@(Model.Query?.JobsSet)" />
                <div>
                    <label for="email">Your email address</label>
                    <input type="email" name="email" id="email" required="required" aria-describedby="email-privacy" class="describedby-tip" data-tip-positions="top bottom"/>
                    <input type="submit" value="Get job alert &gt;"/>
                    <p id="email-privacy">
                        We'll only use your email to send you job alerts.
                        @if (Model.JobsPrivacyPage != null)
                        {
                            @:<a href="@Model.JobsPrivacyPage.Url">Learn more<span class="aural"> about how we use your data on our jobs pages</span></a>.
                        }
                    </p>
                </div>

                if (!String.IsNullOrEmpty(Model.Metadata.RssFeedUrl))
                {
                    <p class="note"><a href="@Model.Metadata.RssFeedUrl" type="application/rss+xml" rel="alternate" class="rss">Subscribe by RSS to jobs like these</a></p>
                }
            }
        }

        @if (Model.JobsSearchPage != null)
        {
            <p class="main-action"><a href="@Model.JobsSearchPage.Url">New job search</a></p>
        }
    </div>
</div>

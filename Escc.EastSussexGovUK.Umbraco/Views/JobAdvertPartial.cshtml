@using Escc.Dates
@using Escc.Web
@model Escc.EastSussexGovUK.Umbraco.Jobs.JobAdvertViewModel
<div class="content text-content">
    <h1>@Model.Metadata.Title</h1>
</div>
@Html.Partial("~/Views/EastSussexGovUK/Features/_Latest.cshtml")
<div class="supporting content-small content-medium text-content">
    <dl class="job-summary">
        @if (!String.IsNullOrEmpty(Model.Job.Reference))
        {
            <dt id="job-reference">Job reference</dt><dd>@Model.Job.Reference</dd>
        }
        @if (!String.IsNullOrEmpty(Model.Job.Location))
        {
            <dt>Location</dt><dd>@Model.Job.Location</dd>
        }
        @if (!String.IsNullOrEmpty(Model.Job.Salary.SalaryRange))
        {
            <dt>Salary</dt>
            <dd>@Model.Job.Salary.SalaryRange</dd>
        }
        @if (Model.Job.ClosingDate.HasValue)
        {
            <dt>Closing date</dt>
            <dd>@Model.Job.ClosingDate.Value.ToBritishDateWithDay()</dd>
        }
        @if (!String.IsNullOrEmpty(Model.Job.Organisation))
        {
            <dt>Organisation</dt><dd>@Model.Job.Organisation</dd>
        }
        @if (!String.IsNullOrEmpty(Model.Job.Department))
        {
            <dt>Department</dt><dd>@Model.Job.Department</dd>
        }
        @if (!String.IsNullOrEmpty(Model.Job.ContractType))
        {
            <dt>Contract type</dt><dd>@Model.Job.ContractType</dd>
        }
        @if (!String.IsNullOrEmpty(Model.Job.JobType))
        {
            <dt>Job type</dt><dd>@Model.Job.JobType</dd>
        }
    </dl>
</div>

<div class="article">
    <div class="content text-content">
        @Model.Job.AdvertHtml
        @if (Model.Job.ApplyUrl != null)
        {
            <p class="main-action"><a href="@Model.Job.ApplyUrl" class="apply">Apply</a> 
            @if (Model.LoginPage != null) {
                @:<span class="login-continue">or <a href="@Model.LoginPage.Url">continue an application you've started</a></span>
            }
            </p>
        }
        @{
            var hasAdditional = Model.Job.AdditionalInformationHtml != null && !String.IsNullOrEmpty(Model.Job.AdditionalInformationHtml.ToHtmlString());
            var additionalHtml = hasAdditional ? Model.Job.AdditionalInformationHtml.ToHtmlString()
                                                    .Replace("<p>", "<p><small>").Replace("</p>", "</small></p>")
                                                    .Replace("<h3>", "<h3><small>").Replace("</h3>", "</small></h3>") 
                                               : String.Empty;
            var hasEqualOpps = Model.Job.EqualOpportunitiesHtml != null && !String.IsNullOrEmpty(Model.Job.EqualOpportunitiesHtml.ToHtmlString());
            var equalOpps = hasEqualOpps ? Model.Job.EqualOpportunitiesHtml.ToHtmlString().Replace("<p>", "<p><small>").Replace("</p>", "</small></p>") : String.Empty;
            if (hasAdditional && hasEqualOpps)
            {
                <div class="large">
                    <div class="tablist" role="application">
                        <ul role="tablist">
                            <li id="tab1" aria-controls="tab1content" role="tab">Additional information</li>
                            <li id="tab2" aria-controls="tab2content" role="tab">Equal opportunities</li>
                        </ul>

                        <div id="tab1content" aria-labelledby="tab1" role="tabpanel">
                            <h2 class="aural">Additional information</h2>
                            @Html.Raw(additionalHtml)
                        </div>

                        <div id="tab2content" aria-labelledby="tab2" role="tabpanel" aria-hidden="true">
                            <h2 class="aural">Equal opportunities</h2>
                            @Html.Raw(equalOpps)
                        </div>
                    </div>
                </div>
                <div class="small medium accordion" role="application">
                    <h2 id="accordion1" aria-controls="accordion1content" role="tab">Additional information</h2>
                    <div id="accordion1content" aria-labelledby="accordion1" role="tabpanel">
                        @Html.Raw(additionalHtml)
                    </div>
                    <h2 id="accordion2" aria-controls="accordion2content" role="tab">Equal opportunities</h2>
                    <div id="accordion2content" aria-labelledby="accordion2" role="tabpanel">@Html.Raw(equalOpps)</div>
                </div>
            }
            else if (hasAdditional)
            {
                <h2>Additional information</h2>
                @Html.Raw(additionalHtml)
            }
            else if (hasEqualOpps)
            {
                <h2>Equal opportunities</h2>
                @Html.Raw(equalOpps)
            }
        }
    </div>
</div>
@Html.Partial("~/Views/Layouts/_SocialMedia.cshtml")
@Html.Partial("~/Views/EastSussexGovUK/Features/_SupportingContentDesktop.cshtml")
<script type="application/ld+json">
    {
    "@@context": "http://schema.org",
    "@@type": "JobPosting",
@if (Model.Job.Salary.MinimumSalary.HasValue) {
    @:"baseSalary": {
    @:    "@@type": "MonetaryAmount",
    @:    "currency": "GBP",
    @:    "minValue": "@Model.Job.Salary.MinimumSalary",
    @:    "maxValue": "@Model.Job.Salary.MaximumSalary"
    @:            },
}
    "title": "@Model.Job.JobTitle",
    "employmentType": "@Model.Job.ContractType",
    "industry": "Local government",
    "jobLocation": {
        "@@type": "Place",
        "address": {
            "@@type": "PostalAddress",
            "addressLocality": "@Model.Job.Location"
            }  
        },
    "salaryCurrency": "GBP",
    "hiringOrganization": {
        "@@type": "Organization",
        "name": "@Model.Job.Organisation"
        }
    },
    "validThrough": "@Model.Job.ClosingDate.Value.ToIso8601DateTime()",
    "url": "@Model.Job.Url"
</script>
@inherits WebViewPage<FormViewModel>
@using Umbraco.Forms.Core
@using Umbraco.Forms.Mvc
@using Umbraco.Forms.Mvc.Models
@using Umbraco.Forms.Mvc.BusinessLogic
@using Escc.Web 

@{ 
    // here we load in the needed default assets for the form
    // this means that 3rd party themes can override these by implementing their own form.cshtml file
    //it will simply hook into standard way forms load assets
    if (Model.DisableDefaultStylesheet == false)
    {
        //Html.SetFormThemeCssFile(Model, "~/css/umbraco-forms.css");
    }
    Html.SetFormFieldWrapperClass("formPart");

    if (Model.ShowValidationSummary)
    {
        // MVC validation summaries with client-side support render 'display:none' on an empty li element
        new ContentSecurityPolicyHeaders(Response.Headers).AppendPolicy("style-src 'sha256-aqNNdDLnnrDOnTNdkJpYlAxKVJtLt9CtFLklmInuUAE='").UpdateHeaders();
    }
}

<div class="umbraco-forms-page">

    @if (string.IsNullOrEmpty(Model.CurrentPage.Caption) == false)
    {
        <h2 class="umbraco-forms-caption">@Model.CurrentPage.Caption</h2>
    }

    @if (Model.ShowValidationSummary)
    {
        @Html.ValidationSummary(false)
    }

    <div class="form service-form">
        @foreach (FieldsetViewModel fs in Model.CurrentPage.Fieldsets)
        {
            if (string.IsNullOrEmpty(fs.Caption) == false)
            {
                if (string.IsNullOrEmpty(Model.CurrentPage.Caption) == false)
                {
                    <h3>@fs.Caption</h3>
                }
                else
                {
                    <h2>@fs.Caption</h2>
                }
            }
           @:<fieldset class="formBox" id="@fs.Id">

    <div class="row-fluid columns-@(fs.Containers.Count)">

        @foreach (var c in fs.Containers)
                {
            <div class="umbraco-forms-container">

                @foreach (FieldViewModel f in c.Fields)
                {
                    bool hidden = f.HasCondition && f.ConditionActionType == FieldConditionActionType.Show;

                    <div class="@Html.GetFormFieldWrapperClass(f.FieldTypeName) @f.CssClass" @{ if (hidden) { <text> style="display: none" </text>     } }>

                        @if (!f.HideLabel)
                        {
                            <label for="@f.Id" class="umbraco-forms-label">
                                @f.Caption @if (f.ShowIndicator)
                                {
                                    <span class="requiredField">@Model.Indicator</span>
                                }
                            </label>
                        }

                        @if (!string.IsNullOrEmpty(f.ToolTip))
                        {
                            <p class="umbraco-forms-tooltip help-block">@f.ToolTip</p>
                        }

                        <div class="umbraco-forms-field-wrapper">

                            @Html.Partial(FormThemeResolver.GetFieldView(Model, f), f)

                            @if (Model.ShowFieldValidaton)
                            {
                                @Html.ValidationMessage(f.Id)
                            }

                        </div>

                    </div>
    }

            </div>
    }
    </div>

        @:</fieldset>

        }
    </div>

    <input type="text" name="@Model.FormId.ToString().Replace("-", "")" class="umbraco-forms-id" />


    <div class="umbraco-forms-navigation row-fluid">

            @if (Model.IsMultiPage)
            {
                if (!Model.IsFirstPage)
                {
                    <input 
                          class="btn prev cancel button" 
                          type="submit" 
                          value="@Model.PreviousCaption" 
                          name="__prev" />
                }

                if (!Model.IsLastPage)
                {
                    <input type="submit" 
                           class="btn next button" 
                           value="@Model.NextCaption" 
                           name="__next" />
                }

                if (Model.IsLastPage)
                {
                    <input type="submit" 
                           class="btn primary button" 
                           value="@Model.SubmitCaption" 
                           name="__next" />
                }
            }
            else
            {
                <input type="submit" 
                       class="btn primary button" 
                       value="@Model.SubmitCaption" 
                       name="__next" />
            }
    </div>
</div>